/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import dao.BronzeDAO;
import dao.ClienteDAO;
import dao.Conexao;
import dao.EscopoDAO;
import dao.GoldDAO;
import dao.SilverDAO;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Bronze;
import model.Escopo;
import model.Silver;
import model.SilverDown;
import rule.LimitaCaracteres;
import sql.crudsql;
import java.util.List;
import java.util.ArrayList;
import model.Gold;
/**
 *
 * @author DELL
 */
public class EtapasAdmin extends javax.swing.JFrame {
    

    /**
     * Creates new form Etapas
     */
    public EtapasAdmin() {
        initComponents();
        jTextFieldcnpj.setDocument(new LimitaCaracteres(18, LimitaCaracteres.TipoEntrada.CNPJ));

        
        jLabelEstrutura.setVisible(false);
        jLabelVolume.setVisible(false);
        jTxtDadosM.setVisible(false);
        jVolumeP.setVisible(false);
        
        jSilverGold.setVisible(false);
        jNomeGold.setVisible(false);
        jTabMenu.removeAll();
        jTabMenu.addTab("Escopo",jEscopo);
        
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jGroupProdutos = new javax.swing.ButtonGroup();
        jGroupGold = new javax.swing.ButtonGroup();
        jTabMenu = new javax.swing.JTabbedPane();
        jEscopo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCheckS3 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jCheckWeb = new javax.swing.JCheckBox();
        jCheckAPI = new javax.swing.JCheckBox();
        jCheckFilas = new javax.swing.JCheckBox();
        jCheckStep = new javax.swing.JCheckBox();
        jCheckCloudWatch = new javax.swing.JCheckBox();
        jCheckFargate = new javax.swing.JCheckBox();
        jCheckContainers = new javax.swing.JCheckBox();
        jCheckLambda = new javax.swing.JCheckBox();
        jCheckGraf_Rel = new javax.swing.JCheckBox();
        jCheckParquet = new javax.swing.JCheckBox();
        jCheckQuicksight = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldcnpj = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldnomeempresa = new javax.swing.JTextField();
        jLabelVolume = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jCheckMongoDB = new javax.swing.JCheckBox();
        jCheckDataLake = new javax.swing.JCheckBox();
        jCheckLNP = new javax.swing.JCheckBox();
        jCheckIngAuto = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldentregaveispossi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldobjetivoneg = new javax.swing.JTextField();
        jTextFieldentregavelmin = new javax.swing.JTextField();
        jLabelEstrutura = new javax.swing.JLabel();
        jTxtDadosM = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jOptimization = new javax.swing.JRadioButton();
        jMarketing = new javax.swing.JRadioButton();
        jSales = new javax.swing.JRadioButton();
        jPricing = new javax.swing.JRadioButton();
        jVox = new javax.swing.JRadioButton();
        jMatching = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jVolumeP = new javax.swing.JSpinner();
        background = new javax.swing.JLabel();
        jUSUAL = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jUSUAL2 = new javax.swing.JLabel();
        jOutroProduto = new javax.swing.JLabel();
        jBronze = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jBoxOrigem = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jBoxSistema = new javax.swing.JComboBox();
        jBoxFormato = new javax.swing.JComboBox();
        jSpinnerVol = new javax.swing.JSpinner();
        jSpinnerFreq = new javax.swing.JSpinner();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jCNPJ = new javax.swing.JLabel();
        background1 = new javax.swing.JLabel();
        jSilvera = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaproduto = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jGold = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelagold = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabelEscolha = new javax.swing.JLabel();
        jSilverGold = new javax.swing.JLabel();
        jLabelChoice = new javax.swing.JLabel();
        jNomeGold = new javax.swing.JLabel();
        jRadioMatching = new javax.swing.JRadioButton();
        jRadioJoin = new javax.swing.JRadioButton();
        jRadioAgregacao = new javax.swing.JRadioButton();
        jRadioSerieTemporal = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(640, 360));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabMenu.setBackground(new java.awt.Color(51, 51, 51));

        jEscopo.setPreferredSize(new java.awt.Dimension(1280, 720));
        jEscopo.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Solução/Produto  ");
        jEscopo.add(jLabel1);
        jLabel1.setBounds(147, 75, 193, 37);

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("CORE: ");
        jEscopo.add(jLabel3);
        jLabel3.setBounds(507, 385, 80, 28);

        jCheckS3.setBackground(new java.awt.Color(0, 0, 0));
        jCheckS3.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckS3.setForeground(new java.awt.Color(240, 240, 240));
        jCheckS3.setText("S3");
        jCheckS3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckS3ActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckS3);
        jCheckS3.setBounds(697, 555, 47, 30);

        jButton1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jButton1.setText("SEGUINTE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jEscopo.add(jButton1);
        jButton1.setBounds(1030, 590, 180, 60);

        jCheckWeb.setBackground(new java.awt.Color(0, 0, 0));
        jCheckWeb.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckWeb.setForeground(new java.awt.Color(240, 240, 240));
        jCheckWeb.setText("Web app ");
        jCheckWeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckWebActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckWeb);
        jCheckWeb.setBounds(507, 435, 109, 33);

        jCheckAPI.setBackground(new java.awt.Color(0, 0, 0));
        jCheckAPI.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckAPI.setForeground(new java.awt.Color(240, 240, 240));
        jCheckAPI.setText("API gateway ");
        jCheckAPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckAPIActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckAPI);
        jCheckAPI.setBounds(507, 475, 141, 30);

        jCheckFilas.setBackground(new java.awt.Color(0, 0, 0));
        jCheckFilas.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckFilas.setForeground(new java.awt.Color(240, 240, 240));
        jCheckFilas.setText("Filas ");
        jCheckFilas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckFilasActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckFilas);
        jCheckFilas.setBounds(507, 515, 73, 33);

        jCheckStep.setBackground(new java.awt.Color(0, 0, 0));
        jCheckStep.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckStep.setForeground(new java.awt.Color(240, 240, 240));
        jCheckStep.setText("Step function ");
        jCheckStep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckStepActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckStep);
        jCheckStep.setBounds(507, 555, 151, 33);

        jCheckCloudWatch.setBackground(new java.awt.Color(0, 0, 0));
        jCheckCloudWatch.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckCloudWatch.setForeground(new java.awt.Color(240, 240, 240));
        jCheckCloudWatch.setText("Cloudwatch");
        jCheckCloudWatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckCloudWatchActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckCloudWatch);
        jCheckCloudWatch.setBounds(827, 555, 131, 30);

        jCheckFargate.setBackground(new java.awt.Color(0, 0, 0));
        jCheckFargate.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckFargate.setForeground(new java.awt.Color(240, 240, 240));
        jCheckFargate.setText("Fargate ");
        jCheckFargate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckFargateActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckFargate);
        jCheckFargate.setBounds(697, 475, 97, 30);

        jCheckContainers.setBackground(new java.awt.Color(0, 0, 0));
        jCheckContainers.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckContainers.setForeground(new java.awt.Color(240, 240, 240));
        jCheckContainers.setText("Containers");
        jCheckContainers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckContainersActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckContainers);
        jCheckContainers.setBounds(697, 515, 123, 30);

        jCheckLambda.setBackground(new java.awt.Color(0, 0, 0));
        jCheckLambda.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckLambda.setForeground(new java.awt.Color(240, 240, 240));
        jCheckLambda.setText("lambda ");
        jCheckLambda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckLambdaActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckLambda);
        jCheckLambda.setBounds(697, 435, 97, 30);

        jCheckGraf_Rel.setBackground(new java.awt.Color(0, 0, 0));
        jCheckGraf_Rel.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckGraf_Rel.setForeground(new java.awt.Color(240, 240, 240));
        jCheckGraf_Rel.setText("Painéis Gráficos e Relatórios");
        jCheckGraf_Rel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckGraf_RelActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckGraf_Rel);
        jCheckGraf_Rel.setBounds(887, 275, 283, 30);

        jCheckParquet.setBackground(new java.awt.Color(0, 0, 0));
        jCheckParquet.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckParquet.setForeground(new java.awt.Color(240, 240, 240));
        jCheckParquet.setText("Parquet");
        jCheckParquet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckParquetActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckParquet);
        jCheckParquet.setBounds(827, 475, 95, 30);

        jCheckQuicksight.setBackground(new java.awt.Color(0, 0, 0));
        jCheckQuicksight.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckQuicksight.setForeground(new java.awt.Color(240, 240, 240));
        jCheckQuicksight.setText("Quicksight");
        jCheckQuicksight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckQuicksightActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckQuicksight);
        jCheckQuicksight.setBounds(827, 515, 123, 30);

        jComboBox1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecionar Solução", "Nxt.Demand", "Nxt.Operations" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jEscopo.add(jComboBox1);
        jComboBox1.setBounds(147, 115, 190, 30);

        jLabel6.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("CNPJ: ");
        jEscopo.add(jLabel6);
        jLabel6.setBounds(57, 25, 61, 24);
        jEscopo.add(jTextFieldcnpj);
        jTextFieldcnpj.setBounds(127, 25, 330, 30);

        jLabel7.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Nome da Empresa: ");
        jEscopo.add(jLabel7);
        jLabel7.setBounds(607, 25, 175, 24);
        jEscopo.add(jTextFieldnomeempresa);
        jTextFieldnomeempresa.setBounds(787, 25, 410, 30);

        jLabelVolume.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabelVolume.setForeground(new java.awt.Color(240, 240, 240));
        jLabelVolume.setText("Volume:");
        jEscopo.add(jLabelVolume);
        jLabelVolume.setBounds(697, 125, 69, 30);
        jLabelVolume.setVisible(false);

        jLabel9.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Funcionalidades ");
        jEscopo.add(jLabel9);
        jLabel9.setBounds(610, 290, 152, 24);

        jCheckMongoDB.setBackground(new java.awt.Color(0, 0, 0));
        jCheckMongoDB.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckMongoDB.setForeground(new java.awt.Color(240, 240, 240));
        jCheckMongoDB.setText("Mongodb");
        jCheckMongoDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckMongoDBActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckMongoDB);
        jCheckMongoDB.setBounds(827, 435, 111, 30);

        jCheckDataLake.setBackground(new java.awt.Color(0, 0, 0));
        jCheckDataLake.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckDataLake.setForeground(new java.awt.Color(240, 240, 240));
        jCheckDataLake.setText("Gerador de Data Lake ");
        jCheckDataLake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckDataLakeActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckDataLake);
        jCheckDataLake.setBounds(887, 155, 225, 30);

        jCheckLNP.setBackground(new java.awt.Color(0, 0, 0));
        jCheckLNP.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckLNP.setForeground(new java.awt.Color(240, 240, 240));
        jCheckLNP.setText("Busca por LNP");
        jCheckLNP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckLNPActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckLNP);
        jCheckLNP.setBounds(887, 195, 157, 30);

        jCheckIngAuto.setBackground(new java.awt.Color(0, 0, 0));
        jCheckIngAuto.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jCheckIngAuto.setForeground(new java.awt.Color(240, 240, 240));
        jCheckIngAuto.setText("Ingestão Automatizada ");
        jCheckIngAuto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckIngAutoActionPerformed(evt);
            }
        });
        jEscopo.add(jCheckIngAuto);
        jCheckIngAuto.setBounds(887, 235, 237, 30);

        jLabel2.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Entregáveis Possíveis ");
        jEscopo.add(jLabel2);
        jLabel2.setBounds(157, 535, 197, 24);
        jEscopo.add(jTextFieldentregaveispossi);
        jTextFieldentregaveispossi.setBounds(137, 565, 220, 50);

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Objetivo do Negócio");
        jEscopo.add(jLabel5);
        jLabel5.setBounds(157, 355, 180, 24);
        jEscopo.add(jTextFieldobjetivoneg);
        jTextFieldobjetivoneg.setBounds(137, 385, 220, 50);
        jEscopo.add(jTextFieldentregavelmin);
        jTextFieldentregavelmin.setBounds(137, 475, 220, 50);

        jLabelEstrutura.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jLabelEstrutura.setForeground(new java.awt.Color(240, 240, 240));
        jLabelEstrutura.setText("Estrutura de Dados mínimos:");
        jEscopo.add(jLabelEstrutura);
        jLabelEstrutura.setBounds(397, 125, 235, 30);
        jLabelEstrutura.setVisible(false);

        jTxtDadosM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtDadosMActionPerformed(evt);
            }
        });
        jEscopo.add(jTxtDadosM);
        jTxtDadosM.setBounds(400, 170, 240, 30);
        jTxtDadosM.setVisible(false);

        jLabel10.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jEscopo.add(jLabel10);
        jLabel10.setBounds(400, 340, 0, 0);

        jLabel18.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Entregável Mínimo ");
        jEscopo.add(jLabel18);
        jLabel18.setBounds(160, 440, 178, 24);

        jOptimization.setBackground(new java.awt.Color(0, 0, 0));
        jGroupProdutos.add(jOptimization);
        jOptimization.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jOptimization.setForeground(new java.awt.Color(255, 255, 255));
        jOptimization.setText("Optimization ");
        jOptimization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOptimizationActionPerformed(evt);
            }
        });
        jEscopo.add(jOptimization);
        jOptimization.setBounds(150, 160, 150, 29);
        jOptimization.setVisible(false);

        jMarketing.setBackground(new java.awt.Color(0, 0, 0));
        jGroupProdutos.add(jMarketing);
        jMarketing.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jMarketing.setForeground(new java.awt.Color(255, 255, 255));
        jMarketing.setText("Marketing & Planning");
        jMarketing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMarketingActionPerformed(evt);
            }
        });
        jEscopo.add(jMarketing);
        jMarketing.setBounds(150, 200, 210, 29);
        jMarketing.setVisible(false);

        jSales.setBackground(new java.awt.Color(0, 0, 0));
        jGroupProdutos.add(jSales);
        jSales.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jSales.setForeground(new java.awt.Color(255, 255, 255));
        jSales.setText("Sales & Distribution");
        jSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSalesActionPerformed(evt);
            }
        });
        jEscopo.add(jSales);
        jSales.setBounds(150, 240, 190, 29);
        jSales.setVisible(false);

        jPricing.setBackground(new java.awt.Color(0, 0, 0));
        jGroupProdutos.add(jPricing);
        jPricing.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jPricing.setForeground(new java.awt.Color(255, 255, 255));
        jPricing.setText("Pricing");
        jPricing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPricingActionPerformed(evt);
            }
        });
        jEscopo.add(jPricing);
        jPricing.setBounds(150, 280, 120, 29);
        jPricing.setVisible(false);

        jVox.setBackground(new java.awt.Color(0, 0, 0));
        jGroupProdutos.add(jVox);
        jVox.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jVox.setForeground(new java.awt.Color(255, 255, 255));
        jVox.setText("Vox");
        jVox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jVoxActionPerformed(evt);
            }
        });
        jEscopo.add(jVox);
        jVox.setBounds(150, 160, 110, 29);
        jVox.setVisible(false);

        jMatching.setBackground(new java.awt.Color(0, 0, 0));
        jGroupProdutos.add(jMatching);
        jMatching.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jMatching.setForeground(new java.awt.Color(255, 255, 255));
        jMatching.setText("Matching & Risk");
        jMatching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMatchingActionPerformed(evt);
            }
        });
        jEscopo.add(jMatching);
        jMatching.setBounds(150, 200, 190, 29);
        jMatching.setVisible(false);

        jLabel11.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(240, 240, 240));
        jLabel11.setText("Funcionalidades ");
        jEscopo.add(jLabel11);
        jLabel11.setBounds(890, 120, 152, 24);

        jVolumeP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jVolumeP.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jEscopo.add(jVolumeP);
        jVolumeP.setBounds(700, 170, 70, 30);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/dom-rock2.png"))); // NOI18N
        background.setText("jLabel1");
        background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        background.setMaximumSize(new java.awt.Dimension(1280, 720));
        background.setMinimumSize(new java.awt.Dimension(1280, 720));
        background.setPreferredSize(new java.awt.Dimension(1280, 720));
        jEscopo.add(background);
        background.setBounds(0, 0, 1280, 720);

        jUSUAL.setText("jLabel8");
        jEscopo.add(jUSUAL);
        jUSUAL.setBounds(10, 10, 34, 14);

        jLabel19.setFont(new java.awt.Font("Georgia", 0, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(240, 240, 240));
        jLabel19.setText("Funcionalidades ");
        jEscopo.add(jLabel19);
        jLabel19.setBounds(890, 120, 152, 24);

        jUSUAL2.setText("jLabel8");
        jEscopo.add(jUSUAL2);
        jUSUAL2.setBounds(40, 90, 34, 14);

        jOutroProduto.setText(".");
        jEscopo.add(jOutroProduto);
        jOutroProduto.setBounds(1240, 650, 4, 14);

        jTabMenu.addTab("Escopo", jEscopo);

        jBronze.setPreferredSize(new java.awt.Dimension(1280, 720));
        jBronze.setLayout(null);

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Sistemas: ");
        jBronze.add(jLabel4);
        jLabel4.setBounds(110, 350, 107, 28);

        jButton2.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        jButton2.setText("PROXIMO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jBronze.add(jButton2);
        jButton2.setBounds(990, 600, 180, 40);

        jLabel12.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(240, 240, 240));
        jLabel12.setText("Frequência:");
        jBronze.add(jLabel12);
        jLabel12.setBounds(910, 80, 127, 28);
        jLabel9.setVisible(false);

        jLabel13.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(240, 240, 240));
        jLabel13.setText("Formato: ");
        jBronze.add(jLabel13);
        jLabel13.setBounds(360, 80, 105, 28);

        jLabel14.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(240, 240, 240));
        jLabel14.setText("Origem do dado: ");
        jBronze.add(jLabel14);
        jLabel14.setBounds(90, 80, 186, 28);

        jBoxOrigem.setBackground(new java.awt.Color(240, 240, 240));
        jBoxOrigem.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jBoxOrigem.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecionar", "API", "SFTP", "Upload" }));
        jBoxOrigem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBoxOrigemActionPerformed(evt);
            }
        });
        jBronze.add(jBoxOrigem);
        jBoxOrigem.setBounds(90, 130, 180, 30);

        jTextField1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jBronze.add(jTextField1);
        jTextField1.setBounds(280, 400, 190, 30);
        jTextField1.setVisible(false);

        jLabel15.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(240, 240, 240));
        jLabel15.setText("Volume:");
        jBronze.add(jLabel15);
        jLabel15.setBounds(640, 80, 91, 28);
        jLabel10.setVisible(false);

        jBoxSistema.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jBoxSistema.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecionar", "ERP", "Vendas", "Outro" }));
        jBoxSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBoxSistemaActionPerformed(evt);
            }
        });
        jBronze.add(jBoxSistema);
        jBoxSistema.setBounds(90, 400, 150, 30);

        jBoxFormato.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jBoxFormato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecionar", "JSON", "CSV", "Planilhas", "Tabelas", "PDF", "Áudio", "Texto" }));
        jBronze.add(jBoxFormato);
        jBoxFormato.setBounds(330, 130, 180, 30);

        jSpinnerVol.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSpinnerVol.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jSpinnerVol.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jBronze.add(jSpinnerVol);
        jSpinnerVol.setBounds(640, 130, 90, 30);

        jSpinnerFreq.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jSpinnerFreq.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        jBronze.add(jSpinnerFreq);
        jSpinnerFreq.setBounds(840, 130, 80, 30);

        jComboBox5.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecionar", "Por Dia", "Por Semana", "Por Mês" }));
        jBronze.add(jComboBox5);
        jComboBox5.setBounds(930, 130, 180, 30);

        jLabel16.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(240, 240, 240));
        jLabel16.setText("Qual?");
        jBronze.add(jLabel16);
        jLabel16.setBounds(280, 380, 40, 14);
        jLabel16.setVisible(false);

        jButton3.setFont(new java.awt.Font("Georgia", 1, 13)); // NOI18N
        jButton3.setText("ADICIONAR OUTRO");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jBronze.add(jButton3);
        jButton3.setBounds(780, 600, 180, 40);

        jLabel17.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(240, 240, 240));
        jLabel17.setText("CNPJ");
        jBronze.add(jLabel17);
        jLabel17.setBounds(60, 40, 40, 20);

        jCNPJ.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jCNPJ.setForeground(new java.awt.Color(240, 240, 240));
        jBronze.add(jCNPJ);
        jCNPJ.setBounds(110, 40, 230, 20);

        background1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/dom-rock2.png"))); // NOI18N
        background1.setText("jLabel1");
        background1.setMaximumSize(new java.awt.Dimension(1280, 720));
        background1.setMinimumSize(new java.awt.Dimension(1280, 720));
        background1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jBronze.add(background1);
        background1.setBounds(0, 0, 1280, 720);

        jTabMenu.addTab("Bronze", jBronze);

        jSilvera.setPreferredSize(new java.awt.Dimension(1280, 720));
        jSilvera.setLayout(null);

        tabelaproduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Silver", "Status", "Problema"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaproduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaprodutoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tabelaprodutoMouseEntered(evt);
            }
        });
        tabelaproduto.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tabelaprodutoComponentShown(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaproduto);

        jSilvera.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 450, 670);

        jButton4.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jButton4.setText("Atualizar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jSilvera.add(jButton4);
        jButton4.setBounds(510, 50, 130, 30);

        jButton5.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jButton5.setText("Voltar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jSilvera.add(jButton5);
        jButton5.setBounds(680, 50, 130, 30);

        jButton9.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        jButton9.setText("Proximo");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jSilvera.add(jButton9);
        jButton9.setBounds(590, 260, 150, 50);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/dom-rock2.png"))); // NOI18N
        jSilvera.add(jLabel8);
        jLabel8.setBounds(0, 0, 1280, 720);

        jTabMenu.addTab("Silver", jSilvera);

        jGold.setPreferredSize(new java.awt.Dimension(1280, 720));
        jGold.setLayout(null);

        tabelagold.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Silver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelagold.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelagoldMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tabelagoldMouseEntered(evt);
            }
        });
        tabelagold.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                tabelagoldComponentShown(evt);
            }
        });
        jScrollPane2.setViewportView(tabelagold);

        jGold.add(jScrollPane2);
        jScrollPane2.setBounds(0, 0, 330, 680);

        jButton6.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton6.setText("Atualizar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jGold.add(jButton6);
        jButton6.setBounds(390, 40, 110, 30);

        jButton7.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        jButton7.setText("Salvar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jGold.add(jButton7);
        jButton7.setBounds(720, 420, 140, 40);

        jLabelEscolha.setForeground(new java.awt.Color(240, 240, 240));
        jGold.add(jLabelEscolha);
        jLabelEscolha.setBounds(390, 120, 100, 30);
        jGold.add(jSilverGold);
        jSilverGold.setBounds(350, 460, 140, 40);

        jLabelChoice.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabelChoice.setForeground(new java.awt.Color(240, 240, 240));
        jLabelChoice.setText("Você escolheu a Silver - - - - - - - -  para a operação - - - - - - - - .");
        jGold.add(jLabelChoice);
        jLabelChoice.setBounds(390, 280, 760, 50);
        jGold.add(jNomeGold);
        jNomeGold.setBounds(610, 440, 160, 30);

        jGroupGold.add(jRadioMatching);
        jRadioMatching.setFont(new java.awt.Font("Georgia", 0, 22)); // NOI18N
        jRadioMatching.setForeground(new java.awt.Color(240, 240, 240));
        jRadioMatching.setText("Matching");
        jRadioMatching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioMatchingActionPerformed(evt);
            }
        });
        jGold.add(jRadioMatching);
        jRadioMatching.setBounds(390, 150, 200, 60);

        jGroupGold.add(jRadioJoin);
        jRadioJoin.setFont(new java.awt.Font("Georgia", 0, 22)); // NOI18N
        jRadioJoin.setForeground(new java.awt.Color(240, 240, 240));
        jRadioJoin.setText("Join");
        jRadioJoin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioJoinActionPerformed(evt);
            }
        });
        jGold.add(jRadioJoin);
        jRadioJoin.setBounds(590, 150, 170, 60);

        jGroupGold.add(jRadioAgregacao);
        jRadioAgregacao.setFont(new java.awt.Font("Georgia", 0, 22)); // NOI18N
        jRadioAgregacao.setForeground(new java.awt.Color(240, 240, 240));
        jRadioAgregacao.setText("Agregação");
        jRadioAgregacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioAgregacaoActionPerformed(evt);
            }
        });
        jGold.add(jRadioAgregacao);
        jRadioAgregacao.setBounds(760, 150, 200, 60);

        jGroupGold.add(jRadioSerieTemporal);
        jRadioSerieTemporal.setFont(new java.awt.Font("Georgia", 0, 22)); // NOI18N
        jRadioSerieTemporal.setForeground(new java.awt.Color(240, 240, 240));
        jRadioSerieTemporal.setText("Serie Temporal");
        jRadioSerieTemporal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioSerieTemporalActionPerformed(evt);
            }
        });
        jGold.add(jRadioSerieTemporal);
        jRadioSerieTemporal.setBounds(960, 150, 240, 60);

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/dom-rock2.png"))); // NOI18N
        jGold.add(jLabel20);
        jLabel20.setBounds(0, 0, 1280, 720);

        jTabMenu.addTab("Gold", jGold);

        getContentPane().add(jTabMenu, java.awt.BorderLayout.CENTER);
        jUSUAL.setVisible(false);

        jMenuBar1.setBackground(new java.awt.Color(51, 51, 51));
        jMenuBar1.setForeground(new java.awt.Color(51, 51, 51));

        jMenu2.setText("Voltar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu1.setText("Sair");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckS3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckS3ActionPerformed
        jUSUAL.setVisible(true);
    }//GEN-LAST:event_jCheckS3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(jTextFieldcnpj.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"O campo CNPJ é obrigatório, favor preencher.","Aviso",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextFieldnomeempresa.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"O campo Nome da Empresa é obrigatório, favor preencher.","Aviso",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTxtDadosM.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"O campo Estrutura de Dados mínimos é obrigatório, favor preencher.","Aviso",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jVolumeP.getValue().equals(0)){
            JOptionPane.showMessageDialog(null, "O campo Volume é obrigatório, favor preencher", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextFieldobjetivoneg.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"O campo Objetivo do Negócio é obrigatório, favor preencher.","Aviso",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextFieldentregavelmin.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"O campo Entregável Mínimo é obrigatório, favor preencher.","Aviso",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jTextFieldentregaveispossi.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"O campo Entregáveis Possíveis  é obrigatório, favor preencher.","Aviso",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //Validando seleção das funcionalidades.
        if(jCheckDataLake.isSelected()||jCheckLNP.isSelected()||jCheckIngAuto.isSelected()||jCheckGraf_Rel.isSelected()){
            
        }else{
            JOptionPane.showMessageDialog(null,"O campo Funcionalidades  é obrigatório, favor selecionar uma opção.","Aviso",JOptionPane.ERROR_MESSAGE);
            return;
            
        }
        //Validando seleção dos cores.
        if(jCheckWeb.isSelected()||jCheckAPI.isSelected()||jCheckFilas.isSelected()||jCheckStep.isSelected()||
                jCheckLambda.isSelected()||jCheckFargate.isSelected()||jCheckContainers.isSelected()||jCheckS3.isSelected()||
                jCheckMongoDB.isSelected()||jCheckParquet.isSelected()||jCheckQuicksight.isSelected()||jCheckCloudWatch.isSelected()){
            
        }else{
            JOptionPane.showMessageDialog(null,"O campo Core  é obrigatório, favor selecionar uma opção.","Aviso",JOptionPane.ERROR_MESSAGE);
            return;
            
        }
        
            
        
        String cnpj = jTextFieldcnpj.getText();
        String nome_empresa = jTextFieldnomeempresa.getText();
        String objetivo_neg = jTextFieldobjetivoneg.getText();
        String entregavel_min = jTextFieldentregavelmin.getText();
        String entregaveis_possi = jTextFieldentregaveispossi.getText();
        String funcionalidade = "";
        if (jCheckDataLake.isSelected())
        funcionalidade+="Gerador de DataLake";
        if (jCheckLNP.isSelected())
        funcionalidade+="Busca por LNP";
        if (jCheckIngAuto.isSelected())
        funcionalidade+="Ingestão Automatizada";
        if (jCheckGraf_Rel.isSelected())
        funcionalidade+="Painéis, gráficos e relatórios";

        String estrutura =  jTxtDadosM.getText();
        String volume =  (String.valueOf(jVolumeP.getValue()));


        String solucao = (String)jComboBox1.getSelectedItem();

        String produto = "";
        if (jVox.isSelected())
        produto+="Vox";
        if (jMarketing.isSelected())
        produto+="Marketing&Planning";
        if (jSales.isSelected())
        produto+="Sales&Distribution";
        if (jPricing.isSelected())
        produto+="Pricing";

        if (jOptimization.isSelected())
        produto+="Optimization";
        if (jMatching.isSelected())
        produto+="Matching&Risk";

        String core = "";
        if (jCheckWeb.isSelected())
        core+="Web App";
        if (jCheckAPI.isSelected())
        core+="API Gateway";
        if (jCheckFilas.isSelected())
        core+="Filas";
        if (jCheckStep.isSelected())
        core+="Step Function";
        if (jCheckLambda.isSelected())
        core+="Lambda";
        if (jCheckFargate.isSelected())
        core+="Fargate";
        if (jCheckContainers.isSelected())
        core+="Containers";
        if (jCheckS3.isSelected())
        core+="S3";
        if (jCheckGraf_Rel.isSelected())
        core+="MongoDB";
        if (jCheckParquet.isSelected())
        core+="Parquet";
        if (jCheckQuicksight.isSelected())
        core+="QuickSight";
        if (jCheckCloudWatch.isSelected())
        core+="CloudWatch";
        
        
        jCNPJ.setText(jTextFieldcnpj.getText());

        Escopo usuarioluiz = new Escopo(cnpj, nome_empresa, objetivo_neg, entregavel_min, entregaveis_possi, solucao, produto, funcionalidade,
            core, estrutura, volume);

        if(jOutroProduto.isVisible()){
        try {
            Connection conexao = new Conexao().getConnection();
            ClienteDAO cadastro =  new ClienteDAO(conexao);
            cadastro.insert(usuarioluiz);

        } catch (SQLException ex) {
            Logger.getLogger(EtapasAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        try {
            Connection conexao = new Conexao().getConnection();
            EscopoDAO cadastro =  new EscopoDAO(conexao);
            cadastro.insert(usuarioluiz);

        } catch (SQLException ex) {
            Logger.getLogger(EtapasAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        jOutroProduto.setVisible(false);
        
        jComboBox1.setSelectedItem("Selecionar Solução");
        jTextFieldentregavelmin.setText("");
        jTextFieldentregaveispossi.setText("");
        jTxtDadosM.setText("");
        jVolumeP.setValue(0);
        
        jGroupProdutos.clearSelection();
        
        jCheckDataLake.setSelected(false);
        jCheckLNP.setSelected(false);
        jCheckIngAuto.setSelected(false);
        jCheckGraf_Rel.setSelected(false);
        
        jCheckWeb.setSelected(false);
        jCheckAPI.setSelected(false);
        jCheckFilas.setSelected(false);
        jCheckStep.setSelected(false);
        jCheckLambda.setSelected(false);
        jCheckFargate.setSelected(false);
        jCheckContainers.setSelected(false);
        jCheckS3.setSelected(false);
        jCheckMongoDB.setSelected(false);
        jCheckParquet.setSelected(false);
        jCheckQuicksight.setSelected(false);
        jCheckCloudWatch.setSelected(false);
        
        jTabMenu.removeAll();
        jTabMenu.addTab("Bronze", jBronze);
        
            
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckWebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckWebActionPerformed
        // TODO add your handling code here:
        if(jCheckWeb.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckWebActionPerformed
    
    private void jCheckAPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckAPIActionPerformed
        // TODO add your handling code here:
        if(jCheckAPI.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckAPIActionPerformed

    private void jCheckFilasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckFilasActionPerformed
        // TODO add your handling code here:
        if(jCheckFilas.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckFilasActionPerformed

    private void jCheckStepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckStepActionPerformed
        // TODO add your handling code here:
        if(jCheckStep.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckStepActionPerformed

    private void jCheckCloudWatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckCloudWatchActionPerformed
        if(jCheckCloudWatch.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckCloudWatchActionPerformed

    private void jCheckFargateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckFargateActionPerformed
        if(jCheckFargate.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckFargateActionPerformed

    private void jCheckContainersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckContainersActionPerformed
        if(jCheckContainers.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckContainersActionPerformed

    private void jCheckLambdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckLambdaActionPerformed
        if(jCheckLambda.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckLambdaActionPerformed

    private void jCheckGraf_RelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckGraf_RelActionPerformed
        if(jCheckIngAuto.isSelected()){
            jUSUAL2.setVisible(false);
        }else{
            jUSUAL2.setVisible(true);
        }
    }//GEN-LAST:event_jCheckGraf_RelActionPerformed

    private void jCheckParquetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckParquetActionPerformed
        if(jCheckParquet.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckParquetActionPerformed

    private void jCheckQuicksightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckQuicksightActionPerformed
        if(jCheckQuicksight.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckQuicksightActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String solucao = (String)jComboBox1.getSelectedItem();
        if(solucao.equals("Selecionar Solução")){
            jVox.setVisible(false);
            jMarketing.setVisible(false);
            jSales.setVisible(false);
            jPricing.setVisible(false);
            jOptimization.setVisible(false);
            jMatching.setVisible(false);

            jLabelEstrutura.setVisible(false);
            jLabelVolume.setVisible(false);
            
            
            jTxtDadosM.setVisible(false);
            jVolumeP.setVisible(false);
        }
        if(solucao.equals("Nxt.Demand")){
            jOptimization.setVisible(false);
            jMatching.setVisible(false);
            jVox.setVisible(true);
            jMarketing.setVisible(true);
            jSales.setVisible(true);
            jPricing.setVisible(true);
            jLabelVolume.setVisible(true);
            jLabelEstrutura.setVisible(true);
            jLabelEstrutura.setVisible(false);
            jLabelVolume.setVisible(false);
            jTxtDadosM.setVisible(false);
            jVolumeP.setVisible(false);
            
           
        }
        if(solucao.equals("Nxt.Operations")){
            jVox.setVisible(false);
            jMarketing.setVisible(false);
            jSales.setVisible(false);
            jPricing.setVisible(false);
            jOptimization.setVisible(true);
            jMatching.setVisible(true);
            jLabelVolume.setVisible(true);
            jLabelEstrutura.setVisible(true);
            jLabelEstrutura.setVisible(false);
            jLabelVolume.setVisible(false);
            jTxtDadosM.setVisible(false);
            jVolumeP.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCheckMongoDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckMongoDBActionPerformed
        if(jCheckMongoDB.isSelected()){
            jUSUAL.setVisible(false);
        }else{
            jUSUAL.setVisible(true);
        }
    }//GEN-LAST:event_jCheckMongoDBActionPerformed

    private void jCheckDataLakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckDataLakeActionPerformed

    }//GEN-LAST:event_jCheckDataLakeActionPerformed

    private void jCheckLNPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckLNPActionPerformed
        if(jCheckLNP.isSelected()){
            jUSUAL2.setVisible(false);
        }else{
            jUSUAL2.setVisible(true);
        }
    }//GEN-LAST:event_jCheckLNPActionPerformed

    private void jCheckIngAutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckIngAutoActionPerformed
        if(jCheckIngAuto.isSelected()){
            jUSUAL2.setVisible(false);
        }else{
            jUSUAL2.setVisible(true);
        }
    }//GEN-LAST:event_jCheckIngAutoActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed

        InicioAdmin vi = new InicioAdmin();
        vi.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenu2ActionPerformed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        if(jEscopo.isShowing()){
          
            InicioAdmin vi = new InicioAdmin();
            vi.setVisible(true);
            dispose();
        }
        
        if(jBronze.isShowing()){
            jTabMenu.removeAll();
            jTabMenu.addTab("Escopo", jEscopo);
            
        }
        if(jSilvera.isShowing()){
            jTabMenu.removeAll();
            jTabMenu.addTab("Bronze", jBronze);
        }
        
        if(jGold.isShowing()){
            jTabMenu.removeAll();
            jTabMenu.addTab("Silver", jSilvera);
            
        }
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        setLocationRelativeTo(null);
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Cadastro Bronze.
        if(jBoxOrigem.getSelectedItem().equals("Selecionar")){
            JOptionPane.showMessageDialog(null, "O campo Origem é obrigatório, favor selecionar uma opção", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jBoxFormato.getSelectedItem().equals("Selecionar")){
            JOptionPane.showMessageDialog(null, "O campo Formato é obrigatório, favor selecionar uma opção", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jBoxSistema.getSelectedItem().equals("Selecionar")){
            JOptionPane.showMessageDialog(null, "O campo Sistema é obrigatório, favor selecionar uma opção", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jBoxSistema.getSelectedItem().equals("Outro") && jTextField1.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo Outro é obrigatório, favor preencher", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jSpinnerVol.getValue().equals(0)){
            JOptionPane.showMessageDialog(null, "O campo Volume é obrigatório, favor preencher", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jSpinnerFreq.getValue().equals(0)){
            JOptionPane.showMessageDialog(null, "O campo Frequência é obrigatório, favor preencher", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jComboBox5.getSelectedItem().equals("Selecionar")){
            JOptionPane.showMessageDialog(null, "O campo Frequência é obrigatório, favor selecionar uma opção", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String origem = (String)jBoxOrigem.getSelectedItem();
        String formato = (String)jBoxFormato.getSelectedItem();
        String sistema = (String)jBoxSistema.getSelectedItem();
        if(jBoxSistema.getSelectedItem().equals("Outro")){
            sistema+=": ";
            sistema+=jTextField1.getText();
        }
        String volume = (String.valueOf(jSpinnerVol.getValue()));

        String frequencia = "";
        frequencia+=(String.valueOf(jSpinnerFreq.getValue()));
        frequencia+= "x ";
        frequencia+=(String)jComboBox5.getSelectedItem();
        String cnpj = jCNPJ.getText();
        

        Bronze usuarioluiz = new Bronze(origem, formato, sistema, volume, frequencia, cnpj);

        try {
            Connection conexao = new Conexao().getConnection();
            BronzeDAO cadastro = new BronzeDAO(conexao);
            cadastro.insert(usuarioluiz);

        } catch (SQLException ex) {
            Logger.getLogger(EtapasAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Cadastro Silver.
        int valorVol = (int) jSpinnerVol.getValue();
        int valorFreq = (int) jSpinnerFreq.getValue();
        
        String cnpjSilver = jCNPJ.getText();
        String nomeSilver = (String)jBoxOrigem.getSelectedItem()+(" - ")+(String)jBoxFormato.getSelectedItem();
        String status = ("");
        String problema = ("");
        
        if(valorVol!=0){
        //Origem de dado: API/JSON/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem de dado: API/JSON/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem de dado: API/JSON/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        
        //Origem de dado: API/CSV/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }     
        //Origem de dado: API/CSV/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/CSV/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: API/Planilhas/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Planilhas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem de dado: API/Planilhas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Tabelas/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Tabelas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Tabelas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/PDF/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/PDF/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/PDF/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Áudio/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Áudio/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Áudio/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Texto/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Texto/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: API/Texto/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/JSON/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/JSON/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        
        //Origem de dado: SFTP/JSON/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/CSV/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/CSV/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/CSV/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Planilhas/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Planilhas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Planilhas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";  
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Tabelas/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Tabelas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Tabelas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/PDF/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/PDF/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";  
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/PDF/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Áudio/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Áudio/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Áudio/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Texto/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Texto/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Texto/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem: Upload/JSON/Por dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/JSON/Por semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/JSON/Por mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/CSV/Por dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/CSV/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/CSV/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Planilhas/Por dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Planilhas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Planilhas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Tabelas/Por dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Tabelas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Tabelas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/PDF/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/PDF/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/PDF/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Áudio/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Áudio/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Áudio/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Texto/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Texto/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Texto/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        }
        
       if(status.equals("")){
           status+=("ok");
       }
       if(problema.equals("")){
           problema+=("Nenhum");
       }

        
        
        

        SilverDown usuariopedro = new SilverDown(nomeSilver, status, problema,cnpjSilver);

        try {
            Connection conexao = new Conexao().getConnection();
            SilverDAO cadastro = new SilverDAO(conexao);
            cadastro.insert(usuariopedro);

        } catch (SQLException ex) {
            Logger.getLogger(EtapasAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        crudsql crud = new crudsql();
        crud.mostrarSilver(jCNPJ.getText());
        
        List<Silver> empresas = crud.getSil();
        DefaultTableModel tabelaProduto =
                (DefaultTableModel)tabelaproduto.getModel();
        
        tabelaProduto.setRowCount(0);
        
        
        
        for(int i=0; i<empresas.size(); i++ ) {  
            tabelaProduto.insertRow(i, empresas.get(i).getNovoProduto());
        }
        //Mandar informações para tabela Gold.
        DefaultTableModel tabelaGold =
                (DefaultTableModel)tabelagold.getModel();
        
        tabelaGold.setRowCount(0);
        
        
        
        for(int i=0; i<empresas.size(); i++ ) {  
            tabelaGold.insertRow(i, empresas.get(i).getNovoProduto());
        }
        
        
        
        
        jTabMenu.removeAll();
        jTabMenu.addTab("Silver", jSilvera);
         
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBoxOrigemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBoxOrigemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBoxOrigemActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jBoxSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBoxSistemaActionPerformed
        if(jBoxSistema.getSelectedItem().equals("Outro")){
            jTextField1.setVisible(true);
            jLabel16.setVisible(true);
        }
        if(jBoxSistema.getSelectedItem().equals("ERP")){
            jTextField1.setVisible(false);
            jLabel16.setVisible(false);
        }
        if(jBoxSistema.getSelectedItem().equals("Selecionar")){
            jTextField1.setVisible(false);
            jLabel16.setVisible(false);
        }
        if(jBoxSistema.getSelectedItem().equals("Vendas")){
            jTextField1.setVisible(false);
            jLabel16.setVisible(false);
        }
    }//GEN-LAST:event_jBoxSistemaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(jBoxOrigem.getSelectedItem().equals("Selecionar")){
            JOptionPane.showMessageDialog(null, "O campo Origem é obrigatório, favor selecionar uma opção", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jBoxFormato.getSelectedItem().equals("Selecionar")){
            JOptionPane.showMessageDialog(null, "O campo Formato é obrigatório, favor selecionar uma opção", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jBoxSistema.getSelectedItem().equals("Selecionar")){
            JOptionPane.showMessageDialog(null, "O campo Sistema é obrigatório, favor selecionar uma opção", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(jBoxSistema.getSelectedItem().equals("Outro") && jTextField1.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O campo Outro é obrigatório, favor preencher", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jSpinnerVol.getValue().equals(0)){
            JOptionPane.showMessageDialog(null, "O campo Volume é obrigatório, favor preencher", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jSpinnerFreq.getValue().equals(0)){
            JOptionPane.showMessageDialog(null, "O campo Frequência é obrigatório, favor preencher", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if(jComboBox5.getSelectedItem().equals("Selecionar")){
            JOptionPane.showMessageDialog(null, "O campo Frequência é obrigatório, favor selecionar uma opção", "Aviso", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String origem = (String)jBoxOrigem.getSelectedItem();
        String formato = (String)jBoxFormato.getSelectedItem();
        String sistema = (String)jBoxSistema.getSelectedItem();
        if(jBoxSistema.getSelectedItem().equals("Outro")){
            sistema+=": ";
            sistema+=jTextField1.getText();
        }
        String volume = (String.valueOf(jSpinnerVol.getValue()));

        String frequencia = "";
        frequencia+=(String.valueOf(jSpinnerFreq.getValue()));
        frequencia+= "x ";
        frequencia+=(String)jComboBox5.getSelectedItem();
        String cnpj = jCNPJ.getText();

        Bronze usuarioluiz = new Bronze(origem, formato, sistema, volume, frequencia, cnpj);

        try {
            Connection conexao = new Conexao().getConnection();
            BronzeDAO cadastro = new BronzeDAO(conexao);
            cadastro.insert(usuarioluiz);

        } catch (SQLException ex) {
            Logger.getLogger(EtapasAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Cadastro Silver.
        int valorVol = (int) jSpinnerVol.getValue();
        int valorFreq = (int) jSpinnerFreq.getValue();
        
        String cnpjSilver = jCNPJ.getText();
        String nomeSilver = (String)jBoxOrigem.getSelectedItem()+(" - ")+(String)jBoxFormato.getSelectedItem();
        String status = ("");
        String problema = ("");
        
        if(valorVol!=0){
        //Origem de dado: API/JSON/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem de dado: API/JSON/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem de dado: API/JSON/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        
        //Origem de dado: API/CSV/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }     
        //Origem de dado: API/CSV/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/CSV/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: API/Planilhas/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Planilhas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem de dado: API/Planilhas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Tabelas/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Tabelas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Tabelas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/PDF/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/PDF/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/PDF/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Áudio/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Áudio/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Áudio/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Texto/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }  
        //Origem de dado: API/Texto/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: API/Texto/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("API")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/JSON/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/JSON/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        
        //Origem de dado: SFTP/JSON/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/CSV/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/CSV/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/CSV/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Planilhas/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Planilhas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Planilhas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";  
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Tabelas/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Tabelas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Tabelas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/PDF/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/PDF/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";  
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/PDF/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Áudio/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Áudio/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Áudio/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Texto/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Texto/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem de dado: SFTP/Texto/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("SFTP")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook"; 
                            problema+="Tamanho excedido";
                        } 
        //Origem: Upload/JSON/Por dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/JSON/Por semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/JSON/Por mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("JSON")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/CSV/Por dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/CSV/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/CSV/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("CSV")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Planilhas/Por dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Planilhas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Planilhas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Planilhas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Tabelas/Por dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Tabelas/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Tabelas/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Tabelas")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/PDF/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/PDF/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/PDF/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("PDF")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Áudio/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Áudio/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Áudio/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Áudio")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Texto/Por Dia
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Dia")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Texto/Por Semana
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Semana")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        //Origem: Upload/Texto/Por Mês
        if(jBoxOrigem.getSelectedItem().equals("Upload")&&
            jBoxFormato.getSelectedItem().equals("Texto")&&
                valorVol>100&&
                    valorFreq>100&&
                        jComboBox5.getSelectedItem().equals("Por Mês")){
                            status+="nook";
                            problema+="Tamanho excedido";
                        }
        }
        
       if(status.equals("")){
           status+=("ok");
       }
       if(problema.equals("")){
           problema+=("Nenhum");
       }
        
        

        SilverDown usuariopedro = new SilverDown(nomeSilver, status, problema, cnpjSilver);

        try {
            Connection conexao = new Conexao().getConnection();
            SilverDAO cadastro = new SilverDAO(conexao);
            cadastro.insert(usuariopedro);

        } catch (SQLException ex) {
            Logger.getLogger(EtapasAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jBoxOrigem.setSelectedItem("Selecionar");
        jBoxFormato.setSelectedItem("Selecionar");
        jSpinnerVol.setValue(0);
        jSpinnerFreq.setValue(0);
        jComboBox5.setSelectedItem("Selecionar");
        jBoxSistema.setSelectedItem("Selecionar");
         
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jOptimizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOptimizationActionPerformed
        // TODO add your handling code here:
        if(jGroupProdutos.getSelection().isSelected()){
            jLabelEstrutura.setVisible(true);
            jLabelVolume.setVisible(true);
            jTxtDadosM.setVisible(true);
            jVolumeP.setVisible(true);
        }
    }//GEN-LAST:event_jOptimizationActionPerformed

    private void jTxtDadosMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtDadosMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtDadosMActionPerformed

    private void jMarketingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMarketingActionPerformed
        // TODO add your handling code here:
        if(jGroupProdutos.getSelection().isSelected()){
            jLabelEstrutura.setVisible(true);
            jLabelVolume.setVisible(true);
            jTxtDadosM.setVisible(true);
            jVolumeP.setVisible(true);
        }
    }//GEN-LAST:event_jMarketingActionPerformed

    private void jSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSalesActionPerformed
        // TODO add your handling code here:
        if(jGroupProdutos.getSelection().isSelected()){
            jLabelEstrutura.setVisible(true);
            jLabelVolume.setVisible(true);
            jTxtDadosM.setVisible(true);
            jVolumeP.setVisible(true);
        }
    }//GEN-LAST:event_jSalesActionPerformed

    private void jPricingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPricingActionPerformed
        // TODO add your handling code here:
        if(jGroupProdutos.getSelection().isSelected()){
            jLabelEstrutura.setVisible(true);
            jLabelVolume.setVisible(true);
            jTxtDadosM.setVisible(true);
            jVolumeP.setVisible(true);
        }
    }//GEN-LAST:event_jPricingActionPerformed

    private void jMatchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMatchingActionPerformed
        // TODO add your handling code here:
        if(jGroupProdutos.getSelection().isSelected()){
            jLabelEstrutura.setVisible(true);
            jLabelVolume.setVisible(true);
            jTxtDadosM.setVisible(true);
            jVolumeP.setVisible(true);
        }
    }//GEN-LAST:event_jMatchingActionPerformed

    private void jVoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jVoxActionPerformed
        // TODO add your handling code here:
        if(jGroupProdutos.getSelection().isSelected()){
            jLabelEstrutura.setVisible(true);
            jLabelVolume.setVisible(true);
            jTxtDadosM.setVisible(true);
            jVolumeP.setVisible(true);
        }
    }//GEN-LAST:event_jVoxActionPerformed

    private void tabelaprodutoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaprodutoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaprodutoMouseClicked

    private void tabelaprodutoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaprodutoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaprodutoMouseEntered

    private void tabelaprodutoComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tabelaprodutoComponentShown
        crudsql crud = new crudsql();
        crud.mostrarSilver(jCNPJ.getText());
        
        List<Silver> empresas = crud.getSil();
        DefaultTableModel tabelaProduto =
                (DefaultTableModel)tabelaproduto.getModel();
        
        tabelaProduto.setRowCount(0);
        
        
        
        for(int i=0; i<empresas.size(); i++ ) {  
            tabelaProduto.insertRow(i, empresas.get(i).getNovoProduto());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_tabelaprodutoComponentShown

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        crudsql crud = new crudsql();
        crud.mostrarSilver(jCNPJ.getText());
        
        List<Silver> empresas = crud.getSil();
        DefaultTableModel tabelaProduto =
                (DefaultTableModel)tabelaproduto.getModel();
        
        tabelaProduto.setRowCount(0);
        
        
        
        for(int i=0; i<empresas.size(); i++ ) {  
            tabelaProduto.insertRow(i, empresas.get(i).getNovoProduto());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jTabMenu.removeAll();
        jTabMenu.addTab("Bronze", jBronze);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tabelagoldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelagoldMouseClicked
        crudsql crud = new crudsql();
        Silver var = new Silver();
        crud.mostrarSilver(tabelagold.getValueAt(tabelagold.getSelectedRow(), 0).toString());
        jSilverGold.setText(var.getNomeSilver());
        
        String ChoiceSilver = jSilverGold.getText();
        String ChoiceGold = jNomeGold.getText();
        
        jLabelChoice.setText("Você escolheu a Silver "+ChoiceSilver+" para a operação "+ChoiceGold+".");
        
        
    }//GEN-LAST:event_tabelagoldMouseClicked

    private void tabelagoldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelagoldMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelagoldMouseEntered

    private void tabelagoldComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_tabelagoldComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelagoldComponentShown

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        crudsql crud = new crudsql();
        crud.mostrarSilver(jCNPJ.getText());
        
        List<Silver> empresas = crud.getSil();
        DefaultTableModel tabelaGold =
                (DefaultTableModel)tabelagold.getModel();
        
        tabelaGold.setRowCount(0);
        
        
        
        for(int i=0; i<empresas.size(); i++ ) {  
            tabelaGold.insertRow(i, empresas.get(i).getNovoProduto());
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String tipoSilver = (String)jSilverGold.getText();
        String nomeGold = (String)jNomeGold.getText();
        String cnpj = (String)jCNPJ.getText();
        
        Gold usuarioigor = new Gold(tipoSilver, nomeGold, cnpj);

        try {
            Connection conexao = new Conexao().getConnection();
            GoldDAO cadastro = new GoldDAO(conexao);
            cadastro.insert(usuarioigor);
            JOptionPane.showMessageDialog(null, "Salvo com sucesso.", "Exito", JOptionPane.INFORMATION_MESSAGE);
            InicioAdmin id = new InicioAdmin();
            id.setVisible(true);
            dispose();

        } catch (SQLException ex) {
            Logger.getLogger(EtapasAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        jTabMenu.removeAll();
        jTabMenu.addTab("Gold",jGold);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jRadioSerieTemporalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioSerieTemporalActionPerformed
        // TODO add your handling code here:
        jNomeGold.setText("Serie Temporal");
        
        String ChoiceSilver = jSilverGold.getText();
        String ChoiceGold = jNomeGold.getText();
        
        jLabelChoice.setText("Você escolheu a Silver "+ChoiceSilver+" para a operação "+ChoiceGold+".");
    }//GEN-LAST:event_jRadioSerieTemporalActionPerformed

    private void jRadioMatchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioMatchingActionPerformed
        // TODO add your handling code here:
        jNomeGold.setText("Matching");
        
        String ChoiceSilver = jSilverGold.getText();
        String ChoiceGold = jNomeGold.getText();
        
        jLabelChoice.setText("Você escolheu a Silver "+ChoiceSilver+" para a operação "+ChoiceGold+".");
    }//GEN-LAST:event_jRadioMatchingActionPerformed

    private void jRadioJoinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioJoinActionPerformed
        // TODO add your handling code here:
        jNomeGold.setText("Join");
        
        String ChoiceSilver = jSilverGold.getText();
        String ChoiceGold = jNomeGold.getText();
        
        jLabelChoice.setText("Você escolheu a Silver "+ChoiceSilver+" para a operação "+ChoiceGold+".");
    }//GEN-LAST:event_jRadioJoinActionPerformed

    private void jRadioAgregacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioAgregacaoActionPerformed
        // TODO add your handling code here:
        jNomeGold.setText("Agregação");
        
        String ChoiceSilver = jSilverGold.getText();
        String ChoiceGold = jNomeGold.getText();
        
        jLabelChoice.setText("Você escolheu a Silver "+ChoiceSilver+" para a operação "+ChoiceGold+".");
    }//GEN-LAST:event_jRadioAgregacaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EtapasAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EtapasAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EtapasAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EtapasAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new EtapasAdmin().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JLabel background1;
    public javax.swing.JComboBox jBoxFormato;
    public javax.swing.JComboBox jBoxOrigem;
    private javax.swing.JComboBox jBoxSistema;
    private javax.swing.JPanel jBronze;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    public javax.swing.JLabel jCNPJ;
    private javax.swing.JCheckBox jCheckAPI;
    private javax.swing.JCheckBox jCheckCloudWatch;
    private javax.swing.JCheckBox jCheckContainers;
    private javax.swing.JCheckBox jCheckDataLake;
    private javax.swing.JCheckBox jCheckFargate;
    private javax.swing.JCheckBox jCheckFilas;
    private javax.swing.JCheckBox jCheckGraf_Rel;
    private javax.swing.JCheckBox jCheckIngAuto;
    private javax.swing.JCheckBox jCheckLNP;
    private javax.swing.JCheckBox jCheckLambda;
    private javax.swing.JCheckBox jCheckMongoDB;
    private javax.swing.JCheckBox jCheckParquet;
    private javax.swing.JCheckBox jCheckQuicksight;
    private javax.swing.JCheckBox jCheckS3;
    private javax.swing.JCheckBox jCheckStep;
    private javax.swing.JCheckBox jCheckWeb;
    private javax.swing.JComboBox jComboBox1;
    public javax.swing.JComboBox jComboBox5;
    private javax.swing.JPanel jEscopo;
    private javax.swing.JPanel jGold;
    private javax.swing.ButtonGroup jGroupGold;
    private javax.swing.ButtonGroup jGroupProdutos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelChoice;
    private javax.swing.JLabel jLabelEscolha;
    private javax.swing.JLabel jLabelEstrutura;
    private javax.swing.JLabel jLabelVolume;
    private javax.swing.JRadioButton jMarketing;
    private javax.swing.JRadioButton jMatching;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel jNomeGold;
    private javax.swing.JRadioButton jOptimization;
    private javax.swing.JLabel jOutroProduto;
    private javax.swing.JRadioButton jPricing;
    private javax.swing.JRadioButton jRadioAgregacao;
    private javax.swing.JRadioButton jRadioJoin;
    private javax.swing.JRadioButton jRadioMatching;
    private javax.swing.JRadioButton jRadioSerieTemporal;
    private javax.swing.JRadioButton jSales;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jSilverGold;
    private javax.swing.JPanel jSilvera;
    public javax.swing.JSpinner jSpinnerFreq;
    public javax.swing.JSpinner jSpinnerVol;
    private javax.swing.JTabbedPane jTabMenu;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextFieldcnpj;
    private javax.swing.JTextField jTextFieldentregaveispossi;
    private javax.swing.JTextField jTextFieldentregavelmin;
    private javax.swing.JTextField jTextFieldnomeempresa;
    private javax.swing.JTextField jTextFieldobjetivoneg;
    private javax.swing.JTextField jTxtDadosM;
    private javax.swing.JLabel jUSUAL;
    private javax.swing.JLabel jUSUAL2;
    private javax.swing.JSpinner jVolumeP;
    private javax.swing.JRadioButton jVox;
    private javax.swing.JTable tabelagold;
    private javax.swing.JTable tabelaproduto;
    // End of variables declaration//GEN-END:variables
}
