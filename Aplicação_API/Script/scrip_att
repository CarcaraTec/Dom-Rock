-- Table: public.cliente

-- DROP TABLE public.cliente;

CREATE TABLE public.cliente
(
    cnpj_cliente character varying COLLATE pg_catalog."default" NOT NULL,
    nome_empresa character varying COLLATE pg_catalog."default" NOT NULL,
    objetivo_negocio character varying COLLATE pg_catalog."default" NOT NULL,
    datahora_cadastro timestamp with time zone NOT NULL,
    CONSTRAINT cliente_pkey PRIMARY KEY (cnpj_cliente)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.cliente
    OWNER to postgres;
	
	

-- Table: public.produto

-- DROP TABLE public.produto;

CREATE TABLE public.produto
(
    solucao character varying COLLATE pg_catalog."default" NOT NULL,
    nome_produto character varying COLLATE pg_catalog."default" NOT NULL,
    id_produto serial NOT NULL,
    CONSTRAINT produto_pkey PRIMARY KEY (id_produto),
    CONSTRAINT produto_nome_produto_key UNIQUE (nome_produto)

)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.produto
    OWNER to postgres;


INSERT INTO public.produto (solucao, nome_produto, id_produto) VALUES ('Nxt.Demand', 'Vox', 1);
INSERT INTO public.produto (solucao, nome_produto, id_produto) VALUES ('Nxt.Demand', 'Marketing&Planning', 2);
INSERT INTO public.produto (solucao, nome_produto, id_produto) VALUES ('Nxt.Demand', 'Sales&Distribution', 3);
INSERT INTO public.produto (solucao, nome_produto, id_produto) VALUES ('Nxt.Demand', 'Pricing', 4);
INSERT INTO public.produto (solucao, nome_produto, id_produto) VALUES ('Nxt.Operations', 'Optimization', 5);
INSERT INTO public.produto (solucao, nome_produto, id_produto) VALUES ('Nxt.Operations', 'Matching&Risk', 6);




-- Table: public.funcionalidade

-- DROP TABLE public.funcionalidade;

CREATE TABLE public.funcionalidade
(
    id_funcionalidade character varying COLLATE pg_catalog."default" NOT NULL,
    nome_funcionalidade character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT funcionalidade_pkey PRIMARY KEY (id_funcionalidade),
    CONSTRAINT funcionalidade_nome_funcionalidade_key UNIQUE (nome_funcionalidade)

)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.funcionalidade
    OWNER to postgres;
	

INSERT INTO public.funcionalidade (id_funcionalidade, nome_funcionalidade) VALUES (1,'gerador de data lake');
INSERT INTO public.funcionalidade (id_funcionalidade, nome_funcionalidade) VALUES (2,'paineis por solucao');
INSERT INTO public.funcionalidade (id_funcionalidade, nome_funcionalidade) VALUES (3,'busca(nlp)');
INSERT INTO public.funcionalidade (id_funcionalidade, nome_funcionalidade) VALUES (4,'gerador de relatorio');


-- Table: public.core

-- DROP TABLE public.core;

CREATE TABLE public.core
(
    nome_core character varying COLLATE pg_catalog."default" NOT NULL,
    id_core character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT core_pkey PRIMARY KEY (id_core),
    CONSTRAINT core_unique UNIQUE (nome_core)

)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.core
    OWNER to postgres;
	

INSERT INTO public.core (id_core, nome_core) VALUES (1,'web app');
INSERT INTO public.core (id_core, nome_core) VALUES (2,'api gateway');
INSERT INTO public.core (id_core, nome_core) VALUES (3,'filas');
INSERT INTO public.core (id_core, nome_core) VALUES (4,'step function');
INSERT INTO public.core (id_core, nome_core) VALUES (5,'lambda');
INSERT INTO public.core (id_core, nome_core) VALUES (6,'fargate');
INSERT INTO public.core (id_core, nome_core) VALUES (7,'containers');
INSERT INTO public.core (id_core, nome_core) VALUES (8,'s3');
INSERT INTO public.core (id_core, nome_core) VALUES (9,'mongodb');
INSERT INTO public.core (id_core, nome_core) VALUES (10,'parquet');
INSERT INTO public.core (id_core, nome_core) VALUES (11,'quick sight');
INSERT INTO public.core (id_core, nome_core) VALUES (12,'cloudwatch');

-- Table: public.origem_dado

-- DROP TABLE public.origem_dado;

CREATE TABLE public.origem_dado
(
    nome_origem character varying COLLATE pg_catalog."default" NOT NULL,
    origem character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT nome_origem PRIMARY KEY (nome_origem),
    CONSTRAINT origem_dado_unique UNIQUE (origem)

)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.origem_dado
    OWNER to postgres;
	
INSERT INTO public.origem_dado (nome_origem, origem) VALUES ('api','api');
INSERT INTO public.origem_dado (nome_origem, origem) VALUES ('sftp','sftp');
INSERT INTO public.origem_dado (nome_origem, origem) VALUES ('upload','upload');

-- Table: public.formato

-- DROP TABLE public.formato;

CREATE TABLE public.formato
(
    nome_formato character varying COLLATE pg_catalog."default" NOT NULL,
    formato character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT nome_formato_pkey PRIMARY KEY (nome_formato),
    CONSTRAINT formato_unique UNIQUE (formato)

)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.formato
    OWNER to postgres;


-- Table: public.sistema

-- DROP TABLE public.sistema;

CREATE TABLE public.sistema
(
    nome_sistema character varying COLLATE pg_catalog."default" NOT NULL,
    sistema character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT nome_sistema PRIMARY KEY (nome_sistema),
    CONSTRAINT sistema_unique UNIQUE (sistema)

)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.sistema
    OWNER to postgres;
	
INSERT INTO public.sistema (nome_sistema, sistema) VALUES ('erp','erp');
INSERT INTO public.sistema (nome_sistema, sistema) VALUES ('vendas','vendas');
INSERT INTO public.sistema (nome_sistema, sistema) VALUES ('outros','outros');

-- Table: public.cadastro_escopo

-- DROP TABLE public.cadastro_escopo;

CREATE TABLE public.cadastro_escopo
(
    id serial NOT NULL,
    cnpj_cliente character varying(20) COLLATE pg_catalog."default" NOT NULL,
    entregavel_min character varying(50) COLLATE pg_catalog."default" NOT NULL,
    entregaveis_possi character varying(50) COLLATE pg_catalog."default" NOT NULL,
    produto character varying(20) COLLATE pg_catalog."default" NOT NULL,
    estrutura character varying(50) COLLATE pg_catalog."default" NOT NULL,
    volume character varying(50) COLLATE pg_catalog."default" NOT NULL,
    funcionalidade character varying(20) COLLATE pg_catalog."default" NOT NULL,
    core character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cadastro_escopo_pkey PRIMARY KEY (id),
    CONSTRAINT cadastro_escopo_cnpj_cliente_fkey FOREIGN KEY (cnpj_cliente)
        REFERENCES public.cliente (cnpj_cliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cadastro_escopo_core_fkey FOREIGN KEY (core)
        REFERENCES public.core (nome_core) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cadastro_escopo_funcionalidade_fkey FOREIGN KEY (funcionalidade)
        REFERENCES public.funcionalidade (nome_funcionalidade) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT cadastro_escopo_produto_fkey FOREIGN KEY (produto)
        REFERENCES public.produto (nome_produto) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.cadastro_escopo
    OWNER to postgres;


-- Table: public.bronze

-- DROP TABLE public.bronze;

CREATE TABLE public.bronze
(
    id_bronze character varying COLLATE pg_catalog."default" NOT NULL,
    cnpj_cliente character varying COLLATE pg_catalog."default" NOT NULL,
    origem character varying COLLATE pg_catalog."default" NOT NULL,
    formato character varying COLLATE pg_catalog."default" NOT NULL,
    volume character varying COLLATE pg_catalog."default" NOT NULL,
    frequencia character varying COLLATE pg_catalog."default" NOT NULL,
    sistema character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT bronze_pkey PRIMARY KEY (id_bronze),
    CONSTRAINT bronze_formato_fkey FOREIGN KEY (sistema)
        REFERENCES public.sistema (nome_sistema) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT bronze_nome_cnpj_cliente_fkey FOREIGN KEY (cnpj_cliente)
        REFERENCES public.cliente (cnpj_cliente) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT bronze_nome_formato_fkey FOREIGN KEY (formato)
        REFERENCES public.formato (nome_formato) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT bronze_origem_fkey FOREIGN KEY (origem)
        REFERENCES public.origem_dado (nome_origem) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.bronze
    OWNER to postgres;

-- Table: public.usuario

-- DROP TABLE public.usuario;

CREATE TABLE public.usuario
(
    id serial NOT NULL,
    usuario character varying(20) COLLATE pg_catalog."default" NOT NULL,
    senha character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT usuario_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE public.usuario
    OWNER to postgres;
